#root{
    width: 100vw;
    .game-container{
        display: flex;
        align-items: center;
        flex-direction: column-reverse;
    }
}
.flex{
    display: flex;
    //justify-content: center;
    align-items: center;
}
.header{
    display: flex;
    justify-content: space-around;
    align-items: center;
    width: 50%;
    margin: auto;
}

main{
    background-color: lightgray;
    h1{
        margin-bottom: 0;
    }
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    @media screen and (max-width: 680px) {
        top: 0;
        height: 100vh;
    }
}
button{
    padding: 10px;
    margin: 10px;
    background-color: lightgray;
    border-radius: 0;
    border: 1px solid black;
}
.cb-button{
    float: right;
}
.instructions {
    width: 100vmin;
    margin: auto;
    display: grid;
    grid-template-columns: 1fr 2fr 1fr;
    grid-gap: 0.8rem;
    #counter{
        text-align: right;
    }
}
.controls{
    display: flex;
    flex-direction: column;
    align-items: center;
    button{
        margin: 0.4rem;
        &::before{
            display: flex;
            justify-content: center;
            align-items: center;
            content: url(./assets/arrow.svg);
            position: relative;
            svg{
                max-width: 1rem;
                position: absolute;
            }
        }
    }
    #up::before{
        transform: rotate(270deg);
    }
    #down::before{
        transform: rotate(90deg);
    }
    #left::before{
        transform: rotate(180deg);
    }
    .control-up{
        display: flex;
        justify-content: center;
    }
}
div{
    display: block;
}
#game-board{
   background-color: black;
    width: 80vmin;
    height: 80vmin;
    display: flex;
    flex-wrap: wrap;
}
#game-board:nth-child(2n){
    
}
.board__row:nth-child(2n){

}
.player{
    background-color: lightgray;
    //background-color: lightseagreen;
    content: 'P';
    display: flex;
    justify-content: center;
    align-items: center;
    &::before{
        background-color: lightseagreen;
        content: 'o_o';
        padding: 20%;
        @media screen and (max-width: 480px) {
            padding: 5%;
            font-size: 0.9rem;
        }
        border-radius: 50%;
    }
}
.wall, .corner{
    background-color: gray;
}
.horizontal{
    //height: 10px;
    //width: 40px;
}
.vertical{
    //width: 10px;
    //height: 40px;
}
.corner{
    //height: 10px;
    //width: 10px;
}
.finish{
    background-color: white;
    &::before,  &::after{
        height: 100%;
        width: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
    }
    &::before{
        content: '';
        //background-color: greenyellow;
        background-color: lightgrey;
    }
    &::after{
        position: relative;
        top: -100%;
        content: 'EXIT';
        color: black;
        font-weight: bold;
        @media screen and (max-width: 480px) {
            font-size: 0.6rem;
        }
    }   
}
.level-editor-container{
    .finish{
        &::before,  &::after{
            top: unset;
        }
        //background-color: greenyellow;
        background-color: lightgrey;
    }
}
.finish.vertical{
    &::after{
       transform: rotate(90deg);  
    }
}

.red{
    //background-color: tomato;
    background-color: red;
    &::before, &::after{
        background-color: red;
    }
}
.blue{
    //background-color: lightskyblue;
    background-color: blue;   
    &::before, &::after{
        background-color: blue;   
    }
}
.green{
    //background-color: lightgreen;
    background-color: green;   
    &::before, &::after{
        background-color: green;   
    }
}
.magenta{
    background-color: magenta;
    &::before, &::after{
        background-color: magenta;   
    }
}
.yellow{
    background-color: yellow;
    &::before, &::after{
        background-color: yellow; 
    }
}
.cyan{
    background-color: cyan;
    &::before, &::after{
        background-color: cyan;   
    }
}
.orange{
    background-color: orange;
    &::before, &::after{
        background-color: orange;   
    }
}
.door{
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    
    &::before{
        content: '';
        background-color: lightgray;
        -webkit-transition:  all 0.5s ease-in-out;
        -moz-transition: all 0.5s ease-in-out;
        -o-transition:  all 0.5s ease-in-out;
        transition: all 0.5s ease-in-out;
    }
    &.horizontal{
        &::before{
            position: absolute;
            background-color: lightgrey;
            height: 100%;
            width: 80%;
        }
    }
    &.vertical{
        &::before{
            height: 80%;
            width: 100%;
        }
    }
}
.closed{
    &.horizontal{
        &::before{
            height: 100%;
            width: 0%;
        }
    }
    &.vertical{
        &::before, &::after{
            height: 0%;
            width: 100%;
        }
    }
}
.path, .player{
   // width: 40px;
    //height: 40px;
}
.path{
    background-color: lightgray;
}
.path.vertical{
    width: 10px;
}
.path.horizontal{
    height: 10px;
    
}
.tile{
   
}
.tile:nth-child(2n){
 
}
.open{
    //background-color: aliceblue;
}
.open::before{
    box-shadow: 1px 1px 2px 2px darkgray inset;
}
.instructions{
    margin-bottom: 4rem;
}
.void{
    background-color: black;
    &::before, &::after{
        content: none;
    }
}
.level-editor-container{
    .tile-list{
        margin-left: 0.5rem;
        button{
            display: block;
        }
    }
    .tile{
        display: flex;
        justify-content: center;
        align-items: center;
        outline: 1px dotted darkgray;
    }
}
.switch{
    color: orange;
}
.mr-2{
    margin-right: 2rem;
}
.container-header{
    p{
        margin-bottom: 0;
    }
    h4{
        margin-top: 0;
    }
}
.container-toggle{
    @media screen and (max-width: 480px) {
        display: none;
    }
}
.colourblind-true{
    .red{
        background-color: #d55e00;
    }
    .orange{
        background-color: #e69f00;
    }
    .yellow{
        background-color: #f0e442;
    }
    .green{
        background-color: #009e73;
    }
    .blue{
        background-color: #0072b2;
    }
    .cyan{
        background-color: #56b4e9;
    }
    .magenta{
        background-color: #cc79a7;
    }
}
@media screen and (min-width: 480px) {
    .top{
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
    }
    .lower-buttons, .bottom-text{
        width: 80%;
        position: relative;
        top: 0%;
        justify-content: space-between;
    }
    .level-editor-container{
        .lower-buttons, .instructions{
            // margin-right: 20%;
        }
    }
    .bottom-text{
        justify-content: center;
    }
}
.dark-mode-true{
    background-color: black;
    color: white;
}

//color fade
/*@keyframes backgroundColorPalette {
	0% {
		background: #ee6055;
	}
	25% {
		background: #60d394;
	}
	50% {
		background: #aaf683;
	}
	75% {
		background: #ffd97d;
	}
	100% {
		background: #ff9b85;
	}
}

.fader {
	animation-name: backgroundColorPalette;
	animation-duration: 5s;
	animation-iteration-count: infinite;
	animation-direction: alternate;
	animation-timing-function: linear; 
}
// linear is enabled default, itâ€™s not necessary to add it make it work but it can make your code more expressive */